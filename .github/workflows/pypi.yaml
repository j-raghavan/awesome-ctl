name: Publish Python 🐍 distribution 📦 to PyPI

on:
  workflow_dispatch:

jobs:
  release:
    name: Release
    runs-on: ubuntu-latest
    permissions:
      contents: write
      issues: write
      pull-requests: write
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0
        token: ${{ secrets.GITHUB_TOKEN }}

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.x"

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install poetry
        pip install python-semantic-release

    - name: Configure Poetry
      run: |
        poetry config virtualenvs.create false

    - name: Check for tag and create if not exists
      id: check_tag
      run: |
        TAG_NAME=$(git describe --tags --abbrev=0 2>/dev/null)
        if [ -z "$TAG_NAME" ]; then
          NEW_TAG="v$(date +'%Y%m%d%H%M%S')"
          git tag $NEW_TAG
          git push origin $NEW_TAG
          echo "::set-output name=tag::$NEW_TAG"
        else
          echo "Tag already exists: $TAG_NAME"
          echo "::set-output name=tag::$TAG_NAME"
        fi

    - name: Semantic Release Version Bump
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        git config --global user.name "github-actions[bot]"
        git config --global user.email "github-actions[bot]@users.noreply.github.com"
        python -m semantic_release version

    - name: Check Version
      run: poetry version

    - name: Build package
      run: poetry build

    - name: Debug Environment
      run: echo ${{ secrets.PYPI_API_KEY }}
      env:
        PYPI_API_KEY: ${{ secrets.PYPI_API_KEY }}

    - name: Publish to PyPI
      env:
        POETRY_PYPI_TOKEN_PYPI: ${{ secrets.PYPI_API_KEY }}
      run: |
        poetry publish
